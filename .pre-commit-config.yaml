minimum_pre_commit_version: 2.13.0
default_stages: [commit, push]
exclude: '^$'
default_language_version:
  python: python3.7
repos:
  - repo: local
    hooks:
    - id: autoflake
      name: Remove unused variables and imports
      entry: bash -c 'autoflake "$@"; git add -u' -- # This runs autoflake and stages the reformatted python files before running autoflake again, which should then "pass"
      language: python
      args: ["--in-place", "--remove-all-unused-imports", "--remove-unused-variables", "--expand-star-imports", "--ignore-init-module-imports"]
      files: \.py$
    - id: isort
      name: Sorting import statements
      entry: bash -c 'isort "$@"; git add -u' --
      language: python
      args: ["--filter-files"]
      files: \.py$
    - id: black
      name: Black Python code formatting
      entry: bash -c 'black "$@"; git add -u' --
      language: python
      types: [python]
      language_version: python3.7
      args: ["--line-length=120"]
    - id: flake8
      name: Flake8 linting pep8, pyflakes and circular complexity
      entry: flake8
      language: system
      types: [python]
      args: ["--max-line-length=120", "--ignore=D100,D104,E402,W503"]
    - id: automate_functions
      name: Add functions to mkgendocs configurations YAML
      entry: bash -c "python3 Python\ tips/automate.py; git add -u;"
      language: system
      types: [python]
    - id: mkgendocs
      name: Generate markdown from docstrings
      entry: bash -c "gendocs --config 'mkgendocs.yml'; git add -u"
      language: system
      types: [python]
    - id: mkbuild
      name: Build the markdown documentation, run with '$ mkdocs serve' at http://127.0.0.1:8000/
      entry: bash -c 'mkdocs build'
      language: system
      types: [python]

